@startuml
title Layout, LayoutManager Class Diagram
class Layout {
  - sourceFilePath: string
  - config: LayoutConfig
  - includedFiles: Set<string>
  - layoutProcessed: string
  - layoutPageBodyVariable: string
  - layoutPageNavUuid: string
  - headTop: string[]
  - headBottom: string[]
  - scriptBottom: string[]
  - layoutUserScriptsAndStyles: string[]
  - generatePromise: Promise<void> | undefined

  + shouldRegenerate(filePaths: string[]): boolean
  + generate(): Promise<void>
  + insertPage(pageContent: string, pageNav: string, pageIncludedFiles: Set<string>): string
  + getPageNjkAssets(): PageNjkAssets
}

class LayoutManager {
  - config: LayoutConfig
  - layoutsRootPath: string
  - layouts: { [name: string]: Layout }

  + removeLayouts(): void
  + updateLayouts(filePaths: string[]): Promise<void[]>
  + generateLayoutIfNeeded(name: string): Promise<void> | undefined
  + layoutHasPageNav(name: string): boolean
  + combineLayoutWithPage(name: string, pageContent: string, pageNav: string, pageIncludedFiles: Set<string>): string
  + getLayoutPageNjkAssets(name: string): PageNjkAssets | {}
}

class ExternalManager {
  + generateDependencies()
}

class ExternalManagerConfig {
}

class PageSources {
  + addAllToSet()
  + getDynamicIncludeSrc()
}

class NodeProcessor {
  + process()
  + headTop: string[]
  + headBottom: string[]
  + scriptBottom: string[]
}

class PluginManager {
  + postRender()
}

class VariableProcessor {
  + renderWithSiteVariables()
}

LayoutConfig : externalManager: ExternalManager
LayoutConfig ..> ExternalManagerConfig

Layout --> LayoutConfig
Layout --> PageSources
Layout --> NodeProcessor
Layout --> PluginManager
Layout --> VariableProcessor
Layout --> ExternalManager

LayoutManager --> LayoutConfig
LayoutManager --> Layout

@enduml



